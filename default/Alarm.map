Archive member included because of file (symbol)

c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                              c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o (exit)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                              crc.o (__do_copy_data)
c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                              Alarm.o (__do_clear_bss)

Allocating common symbols
Common symbol       size              file

mbCRCL              0x1               Alarm.o
iTimer              0x2               pins.o
buffer_length       0x1               Alarm.o
bAlarmMask          0x1               Alarm.o
bStatus             0x1               Alarm.o
buffer              0x32              Alarm.o
bSiren              0x1               Alarm.o
mbCRCH              0x1               Alarm.o
bScanStatus         0x1               uart.o
mbAmountL           0x1               uart.o
iTransmissionTimer  0x2               Alarm.o
mbCommand           0x1               uart.o
mbhStatus           0x1               Alarm.o
buffer_pointer      0x1               uart.o
mbValueL            0x1               uart.o
mbRegisterL         0x1               uart.o
baTrigger           0x8               pins.o
bAlarmEnabled       0x1               Alarm.o

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
LOAD Alarm.o
LOAD pins.o
LOAD uart.o
LOAD registers.o
LOAD crc.o
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a
LOAD c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0x72a
 *(.vectors)
 .vectors       0x00000000       0x54 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000054                . = ALIGN (0x2)
                0x00000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000054        0x0 linker stubs
 *(.trampolines*)
                0x00000054                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000054                __ctors_start = .
 *(.ctors)
                0x00000054                __ctors_end = .
                0x00000054                __dtors_start = .
 *(.dtors)
                0x00000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000054        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
                0x00000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000054        0xc c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000060       0x16 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
                0x00000060                __do_copy_data
 .init4         0x00000076       0x10 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000076                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000086        0x8 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
 *(.init9)
 *(.text)
 .text          0x0000008e        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
                0x0000008e                __vector_1
                0x0000008e                __vector_12
                0x0000008e                __bad_interrupt
                0x0000008e                __vector_6
                0x0000008e                __vector_3
                0x0000008e                __vector_17
                0x0000008e                __vector_19
                0x0000008e                __vector_7
                0x0000008e                __vector_5
                0x0000008e                __vector_4
                0x0000008e                __vector_2
                0x0000008e                __vector_15
                0x0000008e                __vector_8
                0x0000008e                __vector_14
                0x0000008e                __vector_10
                0x0000008e                __vector_16
                0x0000008e                __vector_18
                0x0000008e                __vector_20
 .text          0x00000092      0x112 Alarm.o
                0x000000a0                loop
                0x00000172                boot
                0x0000019a                main
                0x00000092                rearm
 .text          0x000001a4      0x13c pins.o
                0x000001b8                pins_out
                0x0000021a                __vector_9
                0x000001a4                pins_collect
                0x000001e4                pins_init
 .text          0x000002e0      0x36a uart.o
                0x000002ea                uart_send
                0x00000382                uart_process_input
                0x00000600                __vector_11
                0x00000310                __vector_13
                0x00000364                uart_init
                0x000004b0                analyze
                0x000002e0                uart_switch_receive
 .text          0x0000064a       0xa0 registers.o
                0x0000064a                modbus_read_holding
                0x0000069e                modbus_write_holding
 .text          0x000006ea       0x3c crc.o
                0x000006ea                crc_calculate
 .text          0x00000726        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text          0x00000726        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .text          0x00000726        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000726                . = ALIGN (0x2)
 *(.text.*)
 .text.libgcc   0x00000726        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x00000726        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .text.libgcc   0x00000726        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000726                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000726        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x00000726                exit
                0x00000726                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000726        0x4 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x0000072a                _etext = .

.data           0x00800060      0x200 load address 0x0000072a
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
 .data          0x00800060        0x0 Alarm.o
 .data          0x00800060        0x0 pins.o
 .data          0x00800060        0x0 uart.o
 .data          0x00800060        0x0 registers.o
 .data          0x00800060      0x200 crc.o
                0x00800060                CRC_LOOKUP_TABLE
 .data          0x00800260        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .data          0x00800260        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .data          0x00800260        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800260                . = ALIGN (0x2)
                0x00800260                _edata = .
                0x00800260                PROVIDE (__data_end, .)

.bss            0x00800260       0x4e
                0x00800260                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800260        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm16.o
 .bss           0x00800260        0x2 Alarm.o
                0x00800260                bDebugStatus
                0x00800261                bPresenceSuspend
 .bss           0x00800262        0x0 pins.o
 .bss           0x00800262        0x0 uart.o
 .bss           0x00800262        0x0 registers.o
 .bss           0x00800262        0x0 crc.o
 .bss           0x00800262        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .bss           0x00800262        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_copy_data.o)
 .bss           0x00800262        0x0 c:/winavr-20100110/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 *(.bss*)
 *(COMMON)
 COMMON         0x00800262       0x3c Alarm.o
                0x00800262                mbCRCL
                0x00800263                buffer_length
                0x00800264                bAlarmMask
                0x00800265                bStatus
                0x00800266                buffer
                0x00800298                bSiren
                0x00800299                mbCRCH
                0x0080029a                iTransmissionTimer
                0x0080029c                mbhStatus
                0x0080029d                bAlarmEnabled
 COMMON         0x0080029e        0xa pins.o
                0x0080029e                iTimer
                0x008002a0                baTrigger
 COMMON         0x008002a8        0x6 uart.o
                0x008002a8                bScanStatus
                0x008002a9                mbAmountL
                0x008002aa                mbCommand
                0x008002ab                buffer_pointer
                0x008002ac                mbValueL
                0x008002ad                mbRegisterL
                0x008002ae                PROVIDE (__bss_end, .)
                0x0000072a                __data_load_start = LOADADDR (.data)
                0x0000092a                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x008002ae        0x0
                0x008002ae                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x008002ae                PROVIDE (__noinit_end, .)
                0x008002ae                _end = .
                0x008002ae                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab
 *(.stab)

.stabstr
 *(.stabstr)

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges  0x00000000       0xa0
 *(.debug_aranges)
 .debug_aranges
                0x00000000       0x20 Alarm.o
 .debug_aranges
                0x00000020       0x20 pins.o
 .debug_aranges
                0x00000040       0x20 uart.o
 .debug_aranges
                0x00000060       0x20 registers.o
 .debug_aranges
                0x00000080       0x20 crc.o

.debug_pubnames
                0x00000000      0x496
 *(.debug_pubnames)
 .debug_pubnames
                0x00000000       0xed Alarm.o
 .debug_pubnames
                0x000000ed       0xca pins.o
 .debug_pubnames
                0x000001b7      0x149 uart.o
 .debug_pubnames
                0x00000300       0xf9 registers.o
 .debug_pubnames
                0x000003f9       0x9d crc.o

.debug_info     0x00000000      0xd10
 *(.debug_info)
 .debug_info    0x00000000      0x25f Alarm.o
 .debug_info    0x0000025f      0x24d pins.o
 .debug_info    0x000004ac      0x595 uart.o
 .debug_info    0x00000a41      0x186 registers.o
 .debug_info    0x00000bc7      0x149 crc.o
 *(.gnu.linkonce.wi.*)

.debug_abbrev   0x00000000      0x493
 *(.debug_abbrev)
 .debug_abbrev  0x00000000      0x11b Alarm.o
 .debug_abbrev  0x0000011b      0x117 pins.o
 .debug_abbrev  0x00000232      0x155 uart.o
 .debug_abbrev  0x00000387       0x73 registers.o
 .debug_abbrev  0x000003fa       0x99 crc.o

.debug_line     0x00000000      0x80e
 *(.debug_line)
 .debug_line    0x00000000      0x1cd Alarm.o
 .debug_line    0x000001cd      0x1a8 pins.o
 .debug_line    0x00000375      0x2fd uart.o
 .debug_line    0x00000672       0xfd registers.o
 .debug_line    0x0000076f       0x9f crc.o

.debug_frame    0x00000000      0x170
 *(.debug_frame)
 .debug_frame   0x00000000       0x50 Alarm.o
 .debug_frame   0x00000050       0x50 pins.o
 .debug_frame   0x000000a0       0x80 uart.o
 .debug_frame   0x00000120       0x30 registers.o
 .debug_frame   0x00000150       0x20 crc.o

.debug_str      0x00000000      0x2e9
 *(.debug_str)
 .debug_str     0x00000000      0x145 Alarm.o
                                0x179 (size before relaxing)
 .debug_str     0x00000145       0x4f pins.o
                                0x14e (size before relaxing)
 .debug_str     0x00000194       0xee uart.o
                                0x1e3 (size before relaxing)
 .debug_str     0x00000282       0x38 registers.o
                                0x11b (size before relaxing)
 .debug_str     0x000002ba       0x2f crc.o
                                 0xd4 (size before relaxing)

.debug_loc      0x00000000      0x2bb
 *(.debug_loc)
 .debug_loc     0x00000000       0x3e Alarm.o
 .debug_loc     0x0000003e       0xa0 pins.o
 .debug_loc     0x000000de      0x115 uart.o
 .debug_loc     0x000001f3       0xc8 registers.o

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(Alarm.elf elf32-avr)
LOAD linker stubs
